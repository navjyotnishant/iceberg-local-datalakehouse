apiVersion: v1
kind: Namespace
metadata:
  name: iceberg-poc

---
# Persistent Volume & Claim for Dremio
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dremio-pvc
  namespace: iceberg-poc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
# Persistent Volume & Claim for MinIO
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: iceberg-poc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
# Dremio Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dremio
  namespace: iceberg-poc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dremio
  template:
    metadata:
      labels:
        app: dremio
    spec:
      containers:
        - name: dremio
          image: dremio/dremio-oss:latest
          ports:
            - name: http
              containerPort: 9047
            - name: jdbc
              containerPort: 31010
            - name: odbc
              containerPort: 32010
            - name: internal
              containerPort: 45678
          env:
            - name: DREMIO_JAVA_SERVER_EXTRA_OPTS
              value: "-Dpaths.dist=file:///opt/dremio/data/dist"
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "2"
              memory: "4Gi"
          volumeMounts:
            - name: dremio-storage
              mountPath: /opt/dremio/data
      volumes:
        - name: dremio-storage
          persistentVolumeClaim:
            claimName: dremio-pvc

---
# Dremio Service
apiVersion: v1
kind: Service
metadata:
  name: dremio
  namespace: iceberg-poc
spec:
  selector:
    app: dremio
  ports:
    - name: http
      protocol: TCP
      port: 9047
      targetPort: 9047
      nodePort: 30047
    - name: jdbc
      protocol: TCP
      port: 31010
      targetPort: 31010
      nodePort: 31010
    - name: odbc
      protocol: TCP
      port: 32010
      targetPort: 32010
      nodePort: 32010
    - name: internal
      protocol: TCP
      port: 45678
      targetPort: 45678
      nodePort: 32767 
  type: NodePort

---
# MinIO Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: iceberg-poc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: minio/minio
          args: ["server", "/data", "--console-address", ":9001"]
          ports:
            - name: api
              containerPort: 9000
            - name: console
              containerPort: 9001
          env:
            - name: MINIO_ROOT_USER
              value: "admin"
            - name: MINIO_ROOT_PASSWORD
              value: "password"
            - name: MINIO_DOMAIN
              value: "minio"
            - name: MINIO_REGION_NAME
              value: "us-east-1"
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "2Gi"
          volumeMounts:
            - name: minio-storage
              mountPath: /data
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: minio-pvc

---
# MinIO Service
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: iceberg-poc
spec:
  selector:
    app: minio
  ports:
    - name: api
      protocol: TCP
      port: 9000
      targetPort: 9000
      nodePort: 30000
    - name: console
      protocol: TCP
      port: 9001
      targetPort: 9001
      nodePort: 30001
  type: NodePort

---
# Nessie Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nessie
  namespace: iceberg-poc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nessie
  template:
    metadata:
      labels:
        app: nessie
    spec:
      containers:
        - name: nessie
          image: projectnessie/nessie
          ports:
            - name: api
              containerPort: 19120
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"

---
# Nessie Service
apiVersion: v1
kind: Service
metadata:
  name: nessie
  namespace: iceberg-poc
spec:
  selector:
    app: nessie
  ports:
    - name: http
      protocol: TCP
      port: 19120
      targetPort: 19120
      nodePort: 30020
  type: NodePort

# WIP

# ---
# # Spark Deployment
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: spark
#   namespace: iceberg-poc
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: spark
#   template:
#     metadata:
#       labels:
#         app: spark
#     spec:
#       containers:
#         - name: spark
#           image: alexmerced/spark35nb:latest
#           ports:
#             - name: master-web-ui
#               containerPort: 8080
#             - name: master-port
#               containerPort: 7077
#             - name: worker-web-ui
#               containerPort: 8081
#             - name: spark-job-ui
#               containerPort: 4040
#             - name: history-server
#               containerPort: 18080
#             - name: jupyter-nb
#               containerPort: 8888
#           env:
#             - name: AWS_REGION
#               value: "us-east-1"
#             - name: AWS_ACCESS_KEY_ID
#               value: "admin"
#             - name: AWS_SECRET_ACCESS_KEY
#               value: "password"
#             - name: SPARK_MASTER_HOST
#               value: "spark"
#             - name: SPARK_MASTER_PORT
#               value: "7077"
#             - name: SPARK_MASTER_WEBUI_PORT
#               value: "8080"
#             - name: SPARK_WORKER_WEBUI_PORT
#               value: "8081"
#             - name: SPARK_HISTORY_OPTS
#               value: "-Dspark.history.fs.logDirectory=/tmp/spark-events"
#             - name: SPARK_HOME
#               value: "/opt/spark"
#           resources:
#             requests:
#               cpu: "500m"
#               memory: "1Gi"
#             limits:
#               cpu: "2"
#               memory: "4Gi"
#           volumeMounts:
#             - name: notebook-seed
#               mountPath: /workspace/seed-data
#           command:
#             - /bin/bash
#             - -c
#             - |
#               /opt/spark/sbin/start-master.sh && \
#               /opt/spark/sbin/start-worker.sh spark://$(hostname):7077 && \
#               mkdir -p /tmp/spark-events && \
#               start-history-server.sh && \
#               jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password='' && \
#               tail -f /dev/null
#       volumes:
#         - name: notebook-seed
#           hostPath:
#             path: ./notebook-seed

# ---
# # Spark Service
# apiVersion: v1
# kind: Service
# metadata:
#   name: spark
#   namespace: iceberg-poc
# spec:
#   selector:
#     app: spark
#   ports:
#     - name: master-web-ui
#       protocol: TCP
#       port: 8080
#       targetPort: 8080
#       nodePort: 30080
#     - name: master-port
#       protocol: TCP
#       port: 7077
#       targetPort: 7077
#       nodePort: 30077
#     - name: worker-web-ui
#       protocol: TCP
#       port: 8081
#       targetPort: 8081
#       nodePort: 30081
#     - name: spark-job-ui
#       protocol: TCP
#       port: 4040
#       targetPort: 4040
#       nodePort: 30082
#     - name: history-server
#       protocol: TCP
#       port: 18080
#       targetPort: 18080
#       nodePort: 30083
#     - name: jupyter-nb
#       protocol: TCP
#       port: 8888
#       targetPort: 8888
#       nodePort: 30084
#   type: NodePort

